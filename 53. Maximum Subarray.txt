// class Solution {
// public:
//     int maxSubArray(vector<int>& nums) {
//         int maxi=INT_MIN;
//         for(int i=0;i<nums.size();i++){
//             int sum=0;
//             for(int j=i;j<nums.size();j++){
//                 sum+=nums[j];
//                 maxi=max(sum,maxi);
//             }
//         }
//         return maxi;
//     }
// };

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int maxi=INT_MIN;
        int sum=0;
        int ansStart=-1;
        int ansEnd=-1;
        int start;
        for(int i=0;i<nums.size();i++){
            
            if(sum==0){
                start=i;
            } //if the sum is zero, means start of a new sub array.So storing the starting index

            sum+=nums[i];
            if(sum>maxi){
                maxi=sum;//updating the maxi if the sum is greater then  maxi
                // Here as the new Subarray starts, and it is stored in
                // start variable so ansStart = start and ansEnd stores the
                // index position of the last element of the subarray 
                ansStart=start;
                ansEnd=i;
            }
            if(sum<0){
                sum=0;
            }
        }
        int i=ansStart;
        while(i<=ansEnd){
            cout<<nums[i]<<" ";
            i++;
        }
        return maxi;
    }
};